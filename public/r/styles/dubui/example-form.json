{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "example-form",
  "type": "registry:block",
  "description": "A form",
  "dependencies": [
    "zod"
  ],
  "registryDependencies": [
    "card",
    "button",
    "input",
    "label",
    "textarea"
  ],
  "files": [
    {
      "path": "registry/dubui/blocks/example-form.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/dubui/ui/button\"\nimport { Input } from \"@/registry/dubui/ui/input\"\nimport { Label } from \"@/registry/dubui/ui/label\"\nimport { Textarea } from \"@/registry/dubui/ui/textarea\"\n\nimport { ProgressBar } from \"../ui/progress-bar\"\n\nconst exampleFormSchema = z.object({\n  name: z.string().min(1),\n  email: z.string().email(),\n  message: z.string().min(1),\n})\n\nexport function ExampleForm() {\n  const [pending, setPending] = React.useState(false)\n  const [state, setState] = React.useState({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    success: false,\n    errors: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    },\n  })\n\n  const handleSubmit = React.useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault()\n      setPending(true)\n\n      const formData = new FormData(e.target as HTMLFormElement)\n      const data = Object.fromEntries(formData.entries())\n      const result = exampleFormSchema.safeParse(data)\n\n      if (!result.success) {\n        setState({\n          ...state,\n          errors: Object.fromEntries(\n            Object.entries(result.error.flatten().fieldErrors).map(\n              ([key, value]) => [key, value?.[0] ?? \"\"]\n            )\n          ) as Record<keyof typeof state.errors, string>,\n        })\n        setPending(false)\n        return\n      }\n\n      setPending(false)\n    },\n    [state]\n  )\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"mx-auto w-full max-w-sm place-content-center border border-gray-300 py-4\"\n    >\n      <ProgressBar currentStep={2} totalSteps={5} />\n      <div className=\"p-4\">\n        <h3 className=\"mb-4 text-center text-xl\">\n          Got it! We will just need a few details to help find your old account\n        </h3>\n        <div className=\"flex flex-col gap-8\">\n          <div\n            className=\"group/field grid gap-2\"\n            data-invalid={!!state.errors?.name}\n          >\n            <Label\n              htmlFor=\"name\"\n              className=\"group-data-[invalid=true]/field:text-destructive\"\n            >\n              Old employer name\n            </Label>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Lee Robinson\"\n              className=\"group-data-[invalid=true]/field:border-destructive focus-visible:group-data-[invalid=true]/field:ring-destructive\"\n              disabled={pending}\n              aria-invalid={!!state.errors?.name}\n              aria-errormessage=\"error-name\"\n              defaultValue={state.defaultValues.name}\n            />\n            {state.errors?.name && (\n              <p id=\"error-name\" className=\"text-destructive text-sm\">\n                {state.errors.name}\n              </p>\n            )}\n          </div>\n          <div\n            className=\"group/field flex flex-row gap-2\"\n            data-invalid={!!state.errors?.email}\n          >\n            <Label className=\"group-data-[invalid=true]/field:text-destructive\">\n              Approximate employment years\n            </Label>\n            <div className=\"flex w-1/3 flex-col\">\n              <Input\n                id=\"start-year\"\n                name=\"Start Year\"\n                placeholder=\"leerob@acme.com\"\n                className=\"group-data-[invalid=true]/field:border-destructive focus-visible:group-data-[invalid=true]/field:ring-destructive\"\n                disabled={pending}\n                aria-invalid={!!state.errors?.email}\n                aria-errormessage=\"error-email\"\n                defaultValue={state.defaultValues.email}\n              />\n            </div>\n            {state.errors?.email && (\n              <p id=\"error-email\" className=\"text-destructive text-sm\">\n                {state.errors.email}\n              </p>\n            )}\n          </div>\n          <div\n            className=\"group/field grid gap-2\"\n            data-invalid={!!state.errors?.message}\n          >\n            <Label\n              htmlFor=\"message\"\n              className=\"group-data-[invalid=true]/field:text-destructive\"\n            >\n              Message <span aria-hidden=\"true\">*</span>\n            </Label>\n            <Textarea\n              id=\"message\"\n              name=\"message\"\n              placeholder=\"Type your message here...\"\n              className=\"group-data-[invalid=true]/field:border-destructive focus-visible:group-data-[invalid=true]/field:ring-destructive\"\n              disabled={pending}\n              aria-invalid={!!state.errors?.message}\n              aria-errormessage=\"error-message\"\n              defaultValue={state.defaultValues.message}\n            />\n            {state.errors?.message && (\n              <p id=\"error-message\" className=\"text-destructive text-sm\">\n                {state.errors.message}\n              </p>\n            )}\n          </div>\n        </div>\n        <Button>Search</Button>\n      </div>\n    </form>\n  )\n}\n",
      "type": "registry:block"
    }
  ]
}